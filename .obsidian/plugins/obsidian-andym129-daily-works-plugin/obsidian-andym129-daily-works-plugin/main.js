/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var x=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var L=Object.getOwnPropertyNames;var E=Object.prototype.hasOwnProperty;var W=(c,t)=>{for(var s in t)x(c,s,{get:t[s],enumerable:!0})},C=(c,t,s,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let e of L(t))!E.call(c,e)&&e!==s&&x(c,e,{get:()=>t[e],enumerable:!(i=A(t,e))||i.enumerable});return c};var R=c=>C(x({},"__esModule",{value:!0}),c);var V={};W(V,{default:()=>m});module.exports=R(V);var h=require("obsidian"),m=class extends h.Plugin{async onload(){this.registerMarkdownCodeBlockProcessor("daily-works",this.processDailyWorks.bind(this)),this.registerEvent(this.app.workspace.on("file-open",this.refreshDailyWorksInActiveView.bind(this)))}async processDailyWorks(t,s,i){var d,f;let e=this.parseYamlLikeBlock(t),n=e.date,o=e.dir;if(!n||!o){s.createEl("p",{text:"\u26A0\uFE0F \u53C2\u6570\u9519\u8BEF\uFF0C\u8BF7\u63D0\u4F9B `date` \u548C `dir`\u3002"});return}let l=this.app.vault.getMarkdownFiles().filter(r=>r.path.startsWith(o+"/")),a=[];for(let r of l){let p=await this.app.vault.read(r),k=this.extractSectionsByDate(p,n);for(let u of k)a.push({time:u.time,filePath:r.path,text:u.text})}if(!a.length){let r=`> \u672A\u627E\u5230 \`${o}\` \u76EE\u5F55\u4E0B \`${n}\` \u7684\u5DE5\u4F5C\u5185\u5BB9`;await h.MarkdownRenderer.renderMarkdown(r,s,i.sourcePath,this);return}a.sort((r,p)=>r.time.getTime()-p.time.getTime());let g="";for(let r=0;r<a.length;r++){let p=a[r],k=p.text.split(`
`),u=k[0],P=k.slice(1).join(`
`),w=u.replace(/^#\s*/,"").trim(),y=w.match(/\d{4}-\d{2}-\d{2}\s+(\d{2}:\d{2}:\d{2})/),B=y?y[1]:"??:??:??",M=w.match(/🗒️\s*(.+)$/),D=M?M[1].trim():"Untitled",$=(f=(d=p.filePath.split("/").pop())==null?void 0:d.replace(/\.md$/,""))!=null?f:"Unknown",T=`\u{1F552} ${B}  \u{1F5D2}\uFE0F ${$}#${D}`,v=`[[${$}#${w}|${T}]]`,S=r===a.length-1;g+=`# ${v}

${P}

${S?"":`---

`}`}await h.MarkdownRenderer.renderMarkdown(g,s,i.sourcePath,this)}parseYamlLikeBlock(t){let s=t.split(`
`).map(e=>e.trim()),i={};for(let e of s){let n=e.match(/^- (\w+):\s*(.+)$/);n&&(i[n[1]]=n[2])}return i}extractSectionsByDate(t,s){let i=t.split(`
`),e=[],n=[],o=null,l=!1,a=new RegExp(`^#\\s+.*(${s}\\s+\\d{2}:\\d{2}:\\d{2})`);for(let g=0;g<i.length;g++){let d=i[g];if(d.startsWith("# ")){l&&n.length>0&&o&&e.push({time:o,text:n.join(`
`)});let f=d.match(a);f?(o=new Date(f[1]),n=[d],l=!0):(n=[],o=null,l=!1)}else l&&n.push(d)}return l&&n.length>0&&o&&e.push({time:o,text:n.join(`
`)}),e}getCodeBlocksInMarkdown(t){let s=/```([a-zA-Z0-9\-_]+)\n([\s\S]*?)\n```/g,i=[],e;for(;(e=s.exec(t))!==null;)i.push({lang:e[1].trim(),code:e[2].trim()});return i}async refreshDailyWorksInActiveView(){let t=this.app.workspace.getActiveViewOfType(h.MarkdownView);if(!t)return;let s=t.file;if(!s)return;let i=await this.app.vault.read(s),n=this.getCodeBlocksInMarkdown(i).filter(o=>o.lang==="daily-works");console.log(`[Plugin] Found ${n.length} daily-works blocks`),n.length!==0&&setTimeout(async()=>{var o;await((o=t.previewMode)==null?void 0:o.rerender(!0)),console.log("[Plugin] \u5F3A\u5236\u89E6\u53D1 Markdown \u91CD\u65B0\u6E32\u67D3")},100)}};
